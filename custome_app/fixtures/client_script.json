[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Stock Ledger Entry",
  "enabled": 1,
  "modified": "2025-01-20 01:19:23.517336",
  "module": "Stock",
  "name": "Item reorder level",
  "script": "frappe.ui.form.on('Stock Ledger Entry', {\n\trefresh(frm) {\n\t\t// your code her\n\t\tif (frm.doc.actual_qty <= (frm.doc.reorder_level * 0.1)) {  // Example: 20% threshold\n            frappe.msgprint({\n                title: __('Low Stock Alert'),\n                indicator: 'red',\n                message: `Stock for ${frm.doc.item_code} has reached 20% of its reorder level.`\n            });\n        }\n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Stock Entry",
  "enabled": 1,
  "modified": "2025-02-24 10:29:01.080430",
  "module": null,
  "name": "Custom Script",
  "script": "frappe.ui.form.on('Stock Entry', {\r\n    stock_entry_type: function (frm) {\r\n        const condition = frm.doc.stock_entry_type === 'Material Issue' || frm.doc.stock_entry_type === 'Damaged Material Receipt';\r\n        frm.toggle_display('custom_beneficiary_party', condition);\r\n        frm.set_df_property('beneficiary', 'reqd', condition);\r\n    },\r\n    \r\n    from_warehouse: function (frm) {\r\n        const condition = frm.doc.stock_entry_type === 'Material Issue' || frm.doc.stock_entry_type === 'Damaged Material Receipt';\r\n        frm.toggle_display('custom_beneficiary_party', condition);\r\n        frm.set_df_property('custom_beneficiary_party', 'reqd', condition);\r\n    },\r\n    refresh: function (frm) {\r\n        const condition = frm.doc.stock_entry_type === 'Material Issue' || frm.doc.stock_entry_type === 'Damaged Material Receipt';\r\n        frm.toggle_display('custom_beneficiary_party', condition);\r\n        frm.set_df_property('custom_beneficiary_party', 'reqd', condition);\r\n    }\r\n});\r\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Stock Entry",
  "enabled": 1,
  "modified": "2025-01-25 05:15:53.325406",
  "module": null,
  "name": "Item is lass",
  "script": "frappe.ui.form.on('Stock Entry', {\r\n    validate: function (frm) {\r\n        frm.doc.items.forEach(item => {\r\n            if (item.item_code) {\r\n                // Fetch the actual stock level for the selected item\r\n                frappe.call({\r\n                    method: 'frappe.client.get',\r\n                    args: {\r\n                        doctype: 'Bin',\r\n                        filters: {\r\n                            item_code: item.item_code,\r\n                            warehouse: item.s_warehouse || item.t_warehouse\r\n                        }\r\n                    },\r\n                    callback: function (response) {\r\n                        if (response.message) {\r\n                            const current_stock = response.message.actual_qty || 0;\r\n                            const ten_percent_stock = current_stock * 0.10;\r\n\r\n                            // Check if the entered quantity is below 10% of total stock\r\n                            if (item.qty <= ten_percent_stock) {\r\n                                frappe.msgprint({\r\n                                    title: __('Low Stock Warning'),\r\n                                    indicator: 'orange',\r\n                                    message: __(\r\n                                        `The quantity for item <b>${item.item_code}</b> is less than 10% of the available stock (${current_stock}). Please request more.`\r\n                                    )\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n});\r\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Bin",
  "enabled": 0,
  "modified": "2025-02-10 05:43:31.643162",
  "module": "Stock",
  "name": "Custom Report Script",
  "script": "frappe.query_reports[\"Stock Projected Qty\"] = {\r\n    \"formatter\": function(value, row, column, data, default_formatter) {\r\n        if (column.fieldname === \"projected_qty\" || column.fieldname === \"actual_qty\") {\r\n            value = parseInt(value);  // Convert float to integer\r\n        }\r\n        return default_formatter(value, row, column, data);\r\n    }\r\n};\r\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Stock Entry",
  "enabled": 1,
  "modified": "2025-02-16 22:34:09.615249",
  "module": "Custome App",
  "name": "Quantity in Words",
  "script": "frappe.ui.form.on(\"Stock Entry\", {\r\n    validate: function(frm) {\r\n        frm.doc.items.forEach(function(row) {\r\n            if (row.qty) {\r\n                // Convert quantity to words in English\r\n                // frappe.call({\r\n                //     method: \"your_custom_app.utils.convert_number_to_words\",\r\n                //     args: {\r\n                //         number: row.qty,\r\n                //         lang: \"en\"\r\n                //     },\r\n                //     callback: function(response) {\r\n                //         frappe.model.set_value(row.doctype, row.name, \"qty_in_words\", response.message);\r\n                //     }\r\n                // });\r\n\r\n                // Convert quantity to words in Arabic\r\n                frappe.call({\r\n                    method: \"custome_app.utils.convert_number_to_words\",\r\n                    args: {\r\n                        number: row.qty,\r\n                        lang: \"ar\"\r\n                    },\r\n                    callback: function(response) {\r\n                        frappe.model.set_value(row.doctype, row.name, \"qty_in_words\", response.message);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Receipt",
  "enabled": 1,
  "modified": "2025-02-24 01:38:20.642519",
  "module": "Custome App",
  "name": "Quantity in Word for Purchase Receipt",
  "script": "frappe.ui.form.on(\"Purchase Receipt\", {\r\n    validate: function(frm) {\r\n        frm.doc.items.forEach(function(row) {\r\n            if (row.received_qty) {\r\n                // Convert quantity to words in English\r\n                // frappe.call({\r\n                //     method: \"your_custom_app.utils.convert_number_to_words\",\r\n                //     args: {\r\n                //         number: row.qty,\r\n                //         lang: \"en\"\r\n                //     },\r\n                //     callback: function(response) {\r\n                //         frappe.model.set_value(row.doctype, row.name, \"qty_in_words\", response.message);\r\n                //     }\r\n                // });\r\n\r\n                // Convert quantity to words in Arabic\r\n                frappe.call({\r\n                    method: \"custome_app.utils.convert_number_to_words\",\r\n                    args: {\r\n                        number: row.received_qty,\r\n                        lang: \"ar\"\r\n                    },\r\n                    callback: function(response) {\r\n                        frappe.model.set_value(row.doctype, row.name, \"custom_quantity_in_words\", response.message);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Stock Entry",
  "enabled": 1,
  "modified": "2025-02-24 05:03:05.062934",
  "module": "Custome App",
  "name": "`Requires Damaged Receipt",
  "script": "frappe.ui.form.on(\"Stock Entry\", {\r\n    item_code: function(frm, cdt, cdn) {\r\n        let row = locals[cdt][cdn];\r\n\r\n        // Fetch the 'Requires Damaged Receipt' field from Item Doctype\r\n        frappe.db.get_value(\"Item\", row.item_code, \"requires_damaged_receipt\", (r) => {\r\n            if (r.requires_damaged_receipt) {\r\n                // Check available stock in Damaged Warehouse\r\n                frappe.call({\r\n                    method: \"frappe.client.get_value\",\r\n                    args: {\r\n                        doctype: \"Bin\",\r\n                        filters: {\r\n                            item_code: row.item_code,\r\n                            warehouse: \"Damaged Items Warehouse - اا\"\r\n                        },\r\n                        fieldname: \"actual_qty\"\r\n                    },\r\n                    callback: function(response) {\r\n                        let damaged_qty = response.message ? response.message.actual_qty : 0;\r\n\r\n                        if (row.qty > damaged_qty) {\r\n                            frappe.msgprint({\r\n                                title: __(\"Insufficient Damaged Stock\"),\r\n                                message: __(`Cannot issue item <b>${row.item_code}</b> because only <b>${damaged_qty}</b> is available in 'Damaged Items Warehouse'.<br>\r\n                                You need to receive at least <b>${row.qty - damaged_qty}</b> as 'Damaged Material' before proceeding.`),\r\n                                indicator: \"red\"\r\n                            });\r\n\r\n                            // Clear the row to prevent incorrect selection\r\n                            frappe.model.set_value(cdt, cdn, \"item_code\", \"\");\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n});\r\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Stock Entry",
  "enabled": 1,
  "modified": "2025-02-26 23:28:44.224975",
  "module": "Custome App",
  "name": "Supply Party",
  "script": "frappe.ui.form.on('Stock Entry', {\r\n    stock_entry_type: function (frm) {\r\n        const condition = frm.doc.stock_entry_type === 'Material Receipt';\r\n        frm.toggle_display('custom_supply_party', condition);\r\n        frm.set_df_property('supply party', 'reqd', condition);\r\n    },\r\n    \r\n    from_warehouse: function (frm) {\r\n        const condition = frm.doc.stock_entry_type === 'Material Receipt';\r\n        frm.toggle_display('custom_supply_party', condition);\r\n        frm.set_df_property('custom_supply_party', 'reqd', condition);\r\n    },\r\n    refresh: function (frm) {\r\n        const condition = frm.doc.stock_entry_type === 'Material Receipt';\r\n        frm.toggle_display('custom_supply_party', condition);\r\n        frm.set_df_property('custom_supply_party', 'reqd', condition);\r\n    }\r\n});\r\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Stock Entry",
  "enabled": 1,
  "modified": "2025-02-26 23:39:28.114608",
  "module": "Custome App",
  "name": "Received Info",
  "script": "frappe.ui.form.on('Stock Entry', {\r\n    stock_entry_type: function (frm) {\r\n        const condition = frm.doc.stock_entry_type === 'Material Issue';\r\n        frm.toggle_display('custom_received_name', condition);\r\n        frm.set_df_property('Received Name', 'reqd', condition);\r\n        \r\n        frm.toggle_display('custom_work_type_', condition);\r\n        frm.set_df_property('Work Type', 'reqd', condition);\r\n    },\r\n    \r\n    from_warehouse: function (frm) {\r\n        const condition = frm.doc.stock_entry_type === 'Material Issue';\r\n        frm.toggle_display('custom_received_name', condition);\r\n        frm.set_df_property('custom_received_name', 'reqd', condition);\r\n        \r\n        frm.toggle_display('custom_work_type_', condition);\r\n        frm.set_df_property('custom_work_type_', 'reqd', condition);\r\n    },\r\n    refresh: function (frm) {\r\n        const condition = frm.doc.stock_entry_type === 'Material Issue';\r\n        frm.toggle_display('custom_received_name', condition);\r\n        frm.set_df_property('custom_received_name', 'reqd', condition);\r\n        \r\n        frm.toggle_display('custom_work_type_', condition);\r\n        frm.set_df_property('custom_work_type_', 'reqd', condition);\r\n    }\r\n});\r\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Stock Entry",
  "enabled": 0,
  "modified": "2025-03-03 01:58:20.342243",
  "module": "Custome App",
  "name": "Synchronize Data",
  "script": "frappe.ui.form.on(\"Stock Entry\", {\r\n    refresh: function (frm) {\r\n        frm.add_custom_button(__('Synchronize Data'), function () {\r\n            let file_input = $('<input type=\"file\" accept=\".sql\">');\r\n            file_input.trigger('click');\r\n\r\n            file_input.on('change', function () {\r\n                let file = file_input[0].files[0];\r\n                if (file) {\r\n                    let reader = new FileReader();\r\n                    reader.readAsText(file);\r\n                    reader.onload = function (e) {\r\n                        frappe.call({\r\n                            method: \"custom_app.sync_data.restore_backup\",\r\n                            args: {\r\n                                sql_content: e.target.result\r\n                            },\r\n                            callback: function (response) {\r\n                                if (response.message === \"success\") {\r\n                                    frappe.msgprint(\"Data synchronized successfully.\");\r\n                                } else {\r\n                                    frappe.msgprint(\"Error during synchronization.\");\r\n                                }\r\n                            }\r\n                        });\r\n                    };\r\n                }\r\n            });\r\n        }).addClass(\"btn-primary\");\r\n    }\r\n});\r\n",
  "view": "Form"
 }
]